<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3.0//EN"
                      "https://docbook.org/xml/4.3/docbookx.dtd">
<article revision="20161210" status="rough">
  <title>Installing XOM</title>

   <para>
 XOM is a library. By itself, it doesn't do much of anything. It exists
only to be used by other programs. It requires Java 1.2 or later. 
</para>

<para>
To install it you'll need to place the XOM JAR archive somewhere in your
<envar>CLASSPATH</envar>. This archive is the file named something like <filename>xom-1.2.10.jar</filename>. 
(The version number may have changed if I've forgotten
to update this document.) You can either put it in your <filename class="directory">jre/lib/ext</filename>
directory, add <filename>xom-1.2.10.jar</filename> to your <envar>CLASSPATH</envar> environment variable, or
use the <option>-classpath</option> option when invoking <command>javac</command> and 
<command>java</command>.
</para>

<para>To check your download you can run one of the sample programs found in
the <filename>xom-samples.jar</filename> file. For instance, <classname>nu.xom.samples.PrettyPrinter</classname>
class formats an XML document by inserting and removing white space
around element boundaries. In Java 1.4 and later you can run it from the
command line like this:</para>

<screen>$ java -classpath xom-samples.jar:xom-1.2.10.jar nu.xom.samples.PrettyPrinter filename.xml</screen>

<para>Java 1.3 and earlier do not have a built-in XML parser so in these environments you'll also need to install XOM's supporting libraries. These include <filename>xalan.jar</filename>, <filename>xercesImpl.jar</filename>, and <filename>xml-apis.jar</filename>, and are found in the <filename class="directory">lib</filename> directory. The versions shipped with XOM are quite a bit faster and less buggy than the ones bundled with the JDK, so you may well want to use them even in Java 1.4 and later. For example,
</para>


<screen>$ java -classpath xom-samples.jar:xom-1.2.10:lib/xml-apis.jar:lib/xercesImpl.jar:lib/xalan.jar nu.xom.samples.PrettyPrinter filename.xml</screen>

<para>
You can leave out <filename>xalan.jar</filename> if you don't use any of the classes in
<literal>nu.xom.xslt</literal>. <filename>junit.jar</filename> 
is only used for testing, and is
not needed for normal operation of XOM.
</para>

 <articleinfo>
     <author>
      <firstname>Elliotte</firstname>
      <othername>Rusty</othername>
      <surname>Harold</surname>
    </author>
    <authorinitials>ERH</authorinitials>
    <copyright>
      <year>2005, 2016</year>
      <holder>Elliotte Rusty Harold</holder>
    </copyright>
  </articleinfo> 
</article>
