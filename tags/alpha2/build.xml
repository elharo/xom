<?xml version="1.0"?>
<!-- Copyright 2002-2004 Elliotte Rusty Harold

This library is free software; you can redistribute 
it and/or modify it under the terms of version 2.1 of 
the GNU Lesser General Public License as published by  
the Free Software Foundation.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General 
Public License along with this library; if not, write to the 
Free Software Foundation, Inc., 59 Temple Place, Suite 330, 
Boston, MA  02111-1307  USA

You can contact Elliotte Rusty Harold by sending e-mail to
elharo@metalab.unc.edu. Please include the word "XOM" in the
subject line. The XOM home page is temporarily located at
http://www.cafeconleche.org/XOM/  but will eventually move
to http://www.xom.nu/
-->
<project name="XOM" default="help" basedir=".">
    <description>
        Build XOM
    </description>
    
    
  <!-- set global properties for this build -->
  <target name="init">
    <tstamp/>
    <property name="Name"    value="XOM"/>
    <property name="name"    value="xom"/>
    <property name="version" value="1.0a2"/>
    <property name="year"    value="2004"/>

    <echo message="----------- ${Name} ${version} ------------"/>

    <property name="debug"       value="off"/>
    <property name="optimize"    value="on"/>
    <property name="deprecation" value="on"/>

    <property name="src.dir"  value="./src"/>
    <property name="lib.dir"  value="./lib"/>
    <property name="packages" value="nu.xom.*"/>

    <property name="build.dir"      value="./build"/>
    <property name="build.src"      value="./build/src"/>
    <property name="build.dest"     value="./build/classes"/>
    <property name="build.javadocs" value="./build/apidocs"/>
    <property name="testoutput.dir" value="./testresults"/>
    <property name="dist.dir"       value="./dist"/>    
    
    <filter token="year"    value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date"    value="${TODAY}"/>
    <filter token="log"     value="true"/>
    <filter token="verbose" value="true"/>

    <property name="xml-apis.jar"   value="${lib.dir}/xmlParserAPIs.jar"/>
    <property name="parser.jar"     value="${lib.dir}/xercesImpl.jar"/>
    <property name="normalizer.jar" value="${lib.dir}/normalizer.jar"/>
    <property name="xslt.jar"       value="${lib.dir}/xalan.jar"/>
    <property name="junit.jar"      value="${lib.dir}/junit.jar"/>
    <property name="xom.jar"        value="${build.dir}/${name}-${version}.jar"/>
    <property name="xom-core"       value="${build.dest}"/>
    <!-- only needed for servlet samples -->
    <property name="servlet.jar"    value="${lib.dir}/servlet.jar"/>

    <property name="test.outputFormat" value="xml"/>    
    
    <path id="compile.class.path">
      <pathelement location="${xml-apis.jar}"/>
      <pathelement location="${parser.jar}"/>
      <pathelement location="${normalizer.jar}"/>
      <pathelement location="${servlet.jar}"/>
      <pathelement location="${junit.jar}"/>
    </path>

    <path id="run.class.path">
      <pathelement location="${xml-apis.jar}"/>
      <pathelement location="${parser.jar}"/>
      <pathelement location="${normalizer.jar}"/>
      <pathelement location="${xom-core}"/>
      <pathelement location="${xslt.jar}"/>
    </path>
    
   <path id="test.class.path">
      <path refid="run.class.path"/>
      <pathelement location="${junit.jar}"/>
    </path>
    
  </target>
  
  <target name="help">
    <echo>
XOM Build file
-------------------------------------------------------------
    
  available targets are:
    
    help     --> print this message
    jar      --> build the xom.jar file
    samples  --> build the xom-samples.jar file
    compile  --> compile the source code
    javadoc  --> generate the API documentation
    test     --> run JUnit test suite
    testui   --> run Junit test suite in GUI 
    clean    --> clean up the build directory
    dist     --> the zip and .tar.gz files
    
-------------------------------------------------------------
    </echo>
  </target>

  
  <target name="prepare" depends="init">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${testoutput.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>

    <copy todir="${build.src}" filtering="yes">
      <fileset dir="${src.dir}"/>
    </copy>
    
  </target>

  
  <target name="compile" depends="prepare" description="Compile the source code">
    <javac srcdir="${build.src}"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}">
      <classpath refid="compile.class.path"/>
    </javac>
    <copy file="${build.src}/nu/xom/characters.dat" tofile="${build.dest}/nu/xom/characters.dat"/>
  </target>

  
  <target name="jar" depends="compile" description="Create xom.jar">
    <jar jarfile="${build.dir}/${name}-${version}.jar"
         basedir="${build.dest}"
         index="no"
		 compress="yes"
         includes="nu/xom/* nu/xom/xslt/* nu/xom/xinclude/* nu/xom/converters/* nu/xom/xerces/* nu/xom/canonical/* nu/xom/tests/XOMTestCase.class"
         excludes="nu/xom/samples/* nu/xom/benchmarks/* nu/xom/pantry/*">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="nu.xom.Info"/>
        <section name="nu/xom/">
          <attribute name="Sealed" value="true"/>
        </section>
        <section name="nu/xom/xslt/">
          <attribute name="Sealed" value="true"/>
        </section>
        <section name="nu/xom/xinclude/">
          <attribute name="Sealed" value="true"/>
        </section>
        <section name="nu/xom/xerces/">
          <attribute name="Sealed" value="true"/>
        </section>
        <section name="nu/xom/converters/">
          <attribute name="Sealed" value="true"/>
        </section>
        <section name="nu/xom/canonical/">
          <attribute name="Sealed" value="true"/>
        </section>
      </manifest>
    </jar>
  </target>

  
  <target name="samples" depends="compile" description="Create xom-samples.jar">
    <jar jarfile="${build.dir}/${name}-samples.jar"
         basedir="${build.dest}"
         index="yes"
		 compress="no"
         includes="nu/xom/samples/* nu/xom/benchmarks/*"
         excludes="nu/xom/xslt/* nu/xom/xinclude/* nu/xom/converters/* nu/xom/xerces/* nu/xom/canonical/* nu/xom/pantry/* nu/xom/pantry">
    </jar>
  </target>

  
  <target name="javadoc" depends="prepare"
          description="Generate the API documentation">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="nu.xom.xslt, nu.xom.canonical, nu.xom.xinclude, nu.xom, nu.xom.converters"
             sourcepath="${build.src}"
             destdir="${build.javadocs}"
             author="true"
             version="true"
             overview="overview.html"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} ${version}  API"
             docencoding="UTF-8"
             charset="UTF-8"
             link="http://www.junit.org/junit/javadoc/3.8.1"
             doctitle="${Name} ${version}"
             bottom="Copyright 2002-${year} &lt;a href='http://www.elharo.com/'&gt;Elliotte Rusty Harold&lt;/a&gt;
			 &lt;br/&gt; &lt;a href='mailto:elharo@metalab.unc.edu?Subject=XOM'&gt;elharo@metalab.unc.edu&lt;/a&gt;">
      <classpath refid="test.class.path"/>
      
    <fileset dir="${build.src}" defaultexcludes="yes">
      <include name="nu/xom/tests/XOMTestCase.java" />
    </fileset>
      
    </javadoc>
  </target>

  
  <!-- I can never remember the exact target name -->
  <target name="javadocs"   depends="javadoc" />
  <target name="apidocs"    depends="javadoc"/>
  <target name="apidoc"     depends="javadoc"/>
  <target name="betterdocs" depends="betterdoc"/>

  <!-- This task requires Ant 1.6 -->
  <target name="betterdoc" depends="prepare"
          description="Generate the API documentation">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="nu.xom.xslt, nu.xom.canonical, nu.xom.xinclude, nu.xom, nu.xom.converters"
             sourcepath="${build.src}"
             destdir="${build.javadocs}"
             author="true"
             version="true"
             overview="overview.html"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} ${version}  API"
             docencoding="UTF-8"
             charset="UTF-8"
             noqualifier="java.lang:java.io"
             link="http://www.junit.org/junit/javadoc/3.8.1"
             doctitle="${Name} ${version}"
             bottom="Copyright 2002-${year} &lt;a href='http://www.elharo.com/'&gt;Elliotte Rusty Harold&lt;/a&gt;
			 &lt;br/&gt; &lt;a href='mailto:elharo@metalab.unc.edu?Subject=XOM'&gt;elharo@metalab.unc.edu&lt;/a&gt;">
      <classpath refid="test.class.path"/>
      
    <fileset dir="${build.src}" defaultexcludes="yes">
      <include name="nu/xom/tests/XOMTestCase.java" />
    </fileset>
      
    </javadoc>
  </target>

  
  <target name="dist" depends="zip, tar.gz" />
 
  <target name="zip" depends="jar, javadoc, samples" description="Build zip file for distro">
    <zip destfile="${dist.dir}/${name}-${version}.zip">
      <zipfileset prefix="XOM" dir="." 
        excludes="**/*.zip, **/.thumbnails/**, clover_html/**,  clover/**, xom.gif, data/XInclude-Test-Suite/**, data/xmlconf/**, data/oasis*/**, **/testresults/**, **/workspace/**,  **/pantry/**, **/junit*properties, **/.nautilus-metafile.xml, website/**, **/.project, **/.classpath, build/**, dist/**"/>   
      <zipfileset prefix="XOM/apidocs" dir="./${build.dir}/apidocs" 
        excludes="**/.thumbnails/**, **/.nautilus-metafile.xml, website/**, **/.project, **/.classpath"/>   
      <zipfileset fullpath="XOM/${name}-${version}.jar" dir="./${build.dir}" includes="${name}-${version}.jar"/>   
      <zipfileset fullpath="XOM/${name}-samples.jar" dir="./${build.dir}" includes="${name}-samples.jar"/>   
    </zip>
  </target>
  
  
  <target name="tar" depends="jar, javadoc, samples" description="Build tar file for distro">
    <tar destfile="${dist.dir}/${name}-${version}.tar">
      <tarfileset prefix="XOM" dir="." 
        excludes="**/*.zip, **/.thumbnails/**, clover_html/**, clover/**, xom.gif data/XInclude-Test-Suite/**, data/xmlconf/**, data/oasis*/**, **/testresults/**, **/pantry/**, **/workspace/**, **/junit*properties, **/.nautilus-metafile.xml, website/**, **/.project, **/.classpath, build/**, dist/**"/>   
      <tarfileset prefix="XOM/apidocs" dir="./${build.dir}/apidocs" 
        excludes="**/.thumbnails/**, **/.nautilus-metafile.xml, website/**, **/.project, **/.classpath"/>   
      <tarfileset fullpath="XOM/${name}-${version}.jar" dir="./${build.dir}" includes="${name}-${version}.jar"/>   
      <tarfileset fullpath="XOM/${name}-samples.jar" dir="./${build.dir}" includes="${name}-samples.jar"/>   
    </tar>
  </target>
  
  
  <target name="tar.gz" depends="tar" description="Build tar.gz file for distro">
     <gzip src="${dist.dir}/${name}-${version}.tar" zipfile="${dist.dir}/${name}-${version}.tar.gz"/>
  </target>

 
  <!-- This task requires the ANT optional.jar -->
  <target name="test" depends="compile" description="Run JUnit tests using command line user interface">
    <junit printsummary="on" fork="yes">
       <classpath refid="test.class.path" />
       <formatter type="${test.outputFormat}" />
       <batchtest fork="yes" todir="${testoutput.dir}">
         <fileset dir="${build.src}">
           <include name="**/*Test.java" />
           <exclude name="**/pantry/*" />
           <exclude name="**/MegaTest.java" />
           <exclude name="**/benchmarks/*.java" />
           <exclude name="**/EBCDICTest.java" />
         </fileset>
      </batchtest>
    </junit>
  </target>
 
 
  <target name="testjar" depends="jar" description="Run JUnit tests using jar file">
    <junit printsummary="on" fork="no">
       <classpath>
          <pathelement location="${xom.jar}"/>
       </classpath>
       <classpath refid="run.class.path" />
       <formatter type="${test.outputFormat}" />
       <batchtest fork="yes" todir="${testoutput.dir}">
         <fileset dir="${build.src}">
           <include name="**/*Test.java" />
           <exclude name="**/pantry/*" />
           <exclude name="**/MegaTest.java" />
           <exclude name="**/benchmarks/*.java" />
           <exclude name="**/EBCDICTest.java" />
         </fileset>
      </batchtest>
    </junit>
  </target>
 
 
  <target name="testui" depends="compile" description="Run JUnit tests using GUI interface">
    <java classname="junit.swingui.TestRunner" fork="yes" maxmemory="99m">
      <sysproperty key="org.xml.sax.driver" value="org.apache.parsers.SAXParser"/> 
      <jvmarg value="-Xbootclasspath/p:lib/xercesImpl.jar:lib/xmlParserAPIs.jar:lib/xalan.jar"/> 
      <classpath refid="test.class.path" />
      <arg value="nu.xom.tests.XOMTests"/> 
    </java>
  </target>
    
    
  <target name="clean" depends="init" description="Remove build files">
    <delete dir="${build.dir}"/>
    <delete dir="clover"/>
    <delete>
      <fileset dir="." includes="junit*properties"/>
    </delete>
  </target>

  
  <!-- These tasks require Clover -->
  <taskdef resource="clovertasks"/>
  
  <target name="with.clover" depends="init">
    <clover-setup initString="clover/xom_coverage.db">
       <files>
	       <exclude name="nu/xom/samples/**"/>
	       <exclude name="nu/xom/pantry/**"/>
	       <exclude name="nu/xom/benchmarks/**"/>
       </files>
    </clover-setup>
  </target>

  
  <property name="ant-home" value="/opt/java/ant"/>

  <target name="clover.html" depends="with.clover">
    <clover-report>
       <current outfile="clover_html" title="Clover results for ${Name} ${version}">
	       <format type="html"/>
       </current>	 
    </clover-report>
  </target>
  
 
  <!-- This task requires the ANT optional.jar. clover.jar, and junit.jar to be installed in ANT_HOME/lib-->
  <target name="clovertest" depends="compile" description="Run JUnit tests with clover.jar in classpath">
    <junit printsummary="on" fork="no">
       <classpath refid="run.class.path" />
        <classpath>
            <pathelement path="${ant-home}/lib/clover.jar"/>
        </classpath>
        <formatter type="${test.outputFormat}" />
       <batchtest fork="yes" todir="${testoutput.dir}">
         <fileset dir="${build.src}">
           <include name="**/*Test.java" />
           <exclude name="**/pantry/*.java" />
           <exclude name="**/MegaTest.java" />
           <exclude name="**/benchmarks/*.java" />
           <exclude name="**/EBCDICTest.java" />
         </fileset>
      </batchtest>
    </junit>
  </target>  
  
</project>

